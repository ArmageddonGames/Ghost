// import "std.zh"
// import "ghost.zh"

// Spawns two invincible slime enemies and jumps back and forth between them.
// Appears on screen 2 in the demo quest.
const int TWA_CORE_COMBO=24;
const int TWA_SLIME_ID=179;
const float TWA_JUMP_SPEED=2;

ffc script TwinAmoeba
{
    void run(int pos)
    {
        npc ghost;
        npc slime[2];
        int currentSlime;
        
        ghost=GhostInitWait(this, pos, true, TWA_CORE_COMBO);
        Waitframes(4); // Wait for a moment so it doesn't interfere with others
        SetFlags(this, GHF_NO_FALL);
        currentSlime=0;
        slime[0]=Screen->CreateNPC(TWA_SLIME_ID);
        slime[0]->X=ghost->X;
        slime[0]->Y=ghost->Y;
        slime[1]=SpawnNPC(TWA_SLIME_ID);
        
        while(true)
        {
            // If the core just got hit, jump to the other slime
            if(GotHit(this))
            {
                SlimeJump(this, ghost, slime[currentSlime], slime[currentSlime^1], true);
                currentSlime^=1;
            }
            // If Link is too close and the other slime is farther, jump over
            else if(Distance(ghost->X, ghost->Y, Link->X, Link->Y)<32)
            {
                if(SlimeJump(this, ghost, slime[currentSlime], slime[currentSlime^1], false))
                    currentSlime^=1;
            }
            
            // On death, kill the slimes
            if(!GhostWaitframeM(this, ghost, slime[currentSlime]->X, slime[currentSlime]->Y, 0, true, false))
            {
                slime[0]->HP=0;
                slime[1]->HP=0;
                Quit();
            }
        }
    }
    
    // Jump from one slime to the other
    bool SlimeJump(ffc this, npc ghost, npc startSlime, npc destSlime, bool force)
    {
        float xPos;
        float yPos;
        float zPos;
        float totalDist;
        float currentDist;
        float angle;
        int startX;
        int startY;
        int targetX;
        int targetY;
        
        xPos=this->X;
        yPos=this->Y;
        
        // If not forced, see if the destination slime is closer than the starting slime.
        // If so, don't do anything.
        if(!force)
        {
            if(Distance(startSlime->X, startSlime->Y, Link->X, Link->Y)>=Distance(destSlime->X, destSlime->Y, Link->X, Link->Y))
                return false;
        }
        
        do
        {
            // Move from toward target from start
            startX=startSlime->X;
            startY=startSlime->Y;
            targetX=destSlime->X;
            targetY=destSlime->Y;
            
            angle=Angle(xPos, yPos, targetX, targetY);
            xPos+=VectorX(TWA_JUMP_SPEED, angle);
            yPos+=VectorY(TWA_JUMP_SPEED, angle);
            
            // Set height
            totalDist=Distance(startX, startY, targetX, targetY);
            currentDist=Distance(xPos, yPos, targetX, targetY);
            zPos=totalDist/2*Sin(currentDist/totalDist*180);
            
            // If dead, kill slimes
            if(!GhostWaitframeM(this, ghost, xPos, yPos, zPos, true, false))
            {
                startSlime->HP=0;
                destSlime->HP=0;
                Quit();
            }
            
        } while(currentDist>1);
        
        return true;
    }
}

