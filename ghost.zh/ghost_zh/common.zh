// ghost.zh
// Version 2.5.2

// Used for DrawGhostFFCs()
const int __GHI_DRAW_COMBO      = 0;
const int __GHI_DRAW_CSET       = 1;
const int __GHI_DRAW_X          = 2;
const int __GHI_DRAW_Y          = 3;
const int __GHI_DRAW_WIDTH      = 4;
const int __GHI_DRAW_HEIGHT     = 5;
const int __GHI_DRAW_ADDITIONAL = 6;
const int __GHI_DRAW_LAYER      = 7;
const int __GHI_DRAW_OPACITY    = 8;
const int __GHI_DRAW_ARRAY_SIZE = 9;

// Data for additional combos
// Changes here may require modifying Ghost_WaitframeLight and DrawGhostFFCs
const int __GH_MAX_ADDITIONAL_COMBOS = 4;
const int __GHI_AC_COMBO             = 0; // 1, 6, 11, 16
const int __GHI_AC_X                 = 1; // 2, 7, 12, 17
const int __GHI_AC_Y                 = 2; // 3, 8, 13, 18
const int __GHI_AC_WIDTH             = 3; // 4, 9, 14, 19
const int __GHI_AC_HEIGHT            = 4; // 5, 10, 15, 20
const int __GHI_AC_CSET              = 21; // After all the other data
const int __GHI_AC_LAYER             = 22;
const int __GHI_AC_OPACITY           = 23;
const int __GHI_AC_BASE_X            = 24;
const int __GHI_AC_BASE_Y            = 25;
const int __GH_AC_DATA_SIZE          = 5; // Number of repeating elements

// Global variables

// Position
float Ghost_X;
float Ghost_Y;
float Ghost_Z;
int Ghost_Dir;

// Velocity and acceleration
float Ghost_Jump;
float Ghost_Vx;
float Ghost_Vy;
float Ghost_Ax;
float Ghost_Ay;

// Appearance
int Ghost_Data;
int Ghost_CSet;
int Ghost_TileWidth;
int Ghost_TileHeight;

// HP
int Ghost_HP;

// Internal use
int __Ghost_Flags;
int __Ghost_Flags2;
int __Ghost_InternalFlags;
float __Ghost_PrevX;
float __Ghost_PrevY;
int __Ghost_FlashCounter;
int __Ghost_KnockbackCounter;
int __Ghost_XOffsets;
int __Ghost_YOffsets;
int __Ghost_Scripts[32];
int __Ghost_AdditionalCombos[21]; // Size is 5 * max combos + 1

int __ghzhData[5];
int __ghzhPrevScreen;



// Get a normal direction (a DIR_ constant) from a number outside that range
int __NormalizeDir(int dir)
{
    // Already normal
    if(dir>=0 && dir<=7)
        return dir;
    
    // 8-15 go clockwise from up to up-left
    if(dir==8)
        return DIR_UP;
    if(dir==9)
        return DIR_RIGHTUP;
    if(dir==10)
        return DIR_RIGHT;
    if(dir==11)
        return DIR_RIGHTDOWN;
    if(dir==12)
        return DIR_DOWN;
    if(dir==13)
        return DIR_LEFTDOWN;
    if(dir==14)
        return DIR_LEFT;
    if(dir==15)
        return DIR_LEFTUP;
    
    // Out of range, probably -1
    return DIR_UP;
}
